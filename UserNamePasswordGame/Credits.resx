<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIAC9GQAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgGAAAAXHKoZgAAGYRJ
        REFUeNrt3XuUHGd95vHv2zOjti5T04qQrbYtqyR8lW+Z0toQwiasDSQmgDfxsl4wnLDLNZCFXMDZZTdk
        vSckZAnJIRsuCcEGks2NELANXsIxNgFfkO0pxZZ8t6ySLKstyZZ6anTr0czU/vG2WGHGstRvzbzVVc/n
        nD4SnNPl31uqerou7wVERERERERERERERERERERERERERERERERERERERERERERERERERETEB+O7gDIJ
        15xBbc8yMz1Vo2Yyk2nv5mfaZAMDJls4MMGmvY/6rqY0dIgehwu+cS/73vKeAWAR0ACWA8uAl3Q/I8Aw
        sARYAAx2P9q/+ZgBprqfSWCi+xkHdgPPAs91/0wzzP6t6diM76L7gQ7QWYQjUY2MESAEzgTWAucBpwMr
        gKXYMFgA1HzXW3HT2FDYD7SBncAW4FHgke6f2zJIt6Zx5rvYolEAAM0lP0m9VlsCrAEuBV4BXAisxv66
        D/quUXoyBewBngTuB+4G7oEsSdINB30XVwSVDoAwiBZhf91fDbwGuAB7Sa9f9XKaBnZhw+DbwO3AI0ka
        H/JdmC+VC4BVQVQzsBJ7wl8FXAL8RBX3RcVl2OcHdwFfBb5DZp5JJsYqdZtQmYM+DEYHwZwHvBl74r8U
        GPBdlxTCYeBh4O+Bv5/J2LxtIq7EQ8TSB0D3gd5a4F3AvwNO9V2TFFYGJMDfADdk1DZvTe8r9RVBqQMg
        DKKVwLuBX8Ze9oscjwx4AvgL4EtJGu/0XdBcKWUAdB/uXQX8BnAReqgnvZkGfgB8Avi/SRpP+i4ob6W7
        Bw6D6Bzg48B/wf7qlzLkZF7UgDOA1wHLG/Xmg+1OK/VdVJ5Kc3KEwbpByF4P/C5wvu96pHQy4B7gI8Dt
        SUk6FZXiCiAMomHgQ9hf/jN81yOlZLA9QV8LHGrUmxvbndaU76Jc9X0AhEG0AvhfwAeAxb7rkdIbBv4N
        sLhRb97b7rT6uhNRXwdAGESrgc8CV/d7W6SvDAEvB05r1Jt3tzut/b4L6lXfnjRhEJ0FfA74eUr0LEP6
        Rg37hils1Jt3tjutCd8F9aIvT5zuL//ngcs9lpFhB5scBA51P53un9PdTyV6k82DAewJNwjUgZOe9/E9
        9PofgF/tx/4CfRcAYRCdCvwZ8Pp5/M8exo433wZsBTZ3/769+/+PY4ejTgKHyZjBkGGyUjwp9i4zhowa
        5ochsAB7Lx5g52U4Ffvw90zsiM6V2PEd8zWKMwP+Evi1JI33+t5dJ6KvAiAMogD4E2zPvrmUYU/sjcB6
        7OufR4EdWWYmsk59etvkXb53hxylyc9RD3YPYkPhVOz8DS/rfs7HTuQyl8f7NPDHwG/30+jCvgmAVcPR
        kDH8d+x72LlK9nHgPuCbwD8Djw3MDOzbvO9e382XHqxaEmFqBMC5wGXYDj0Rc/e26CBwbZbNfHrrxL/0
        xdVf3wRAGERXA3+OTfi87QBuBv4WuC9J432+2yt5+03C4PYR4KewI0KvwE7tlrdngLclaXyr7xYfj74I
        gDCILsQO1Tw3503vwp7015OxKZmIp323VeZeGERDwDrsCNFfwt4e5Gk98B+SNE58t/XFFP41YBhES4A/
        BF6V42YngZuAD2K4PknjVnuy1ReXbOKu3WnNtDut7Y1681vAvUAT+xAxr0FjpwNDjXrz1nanVegflcIH
        QKPe/GXsqL687vufAn4buC5J483tjk78qmp3WtPtTuvJRr15C7APOw9kXs8HzgMebndaD/tu57EUOgC6
        nX0+hZ2JNw93AO+t1Wpf2zI+1vHdPimGdqd1cGRB805j2Ijt3HNKDputA6sa9eYtRe4kVNgACINoAPvE
        /w05bG4G21njfUkab9x7aIfv5knBjE+2snan9USj3vw+9lnT6hw2exqwp734zO9zcJvvJs6qyBNlXApc
        k8N2ZoAvA+/vh4cy4leSxpuAdwK35LA5A7wznNpf2OHphbwC6D6l/SjwSsdNZdj53X4jSeNnfbdL+kO7
        02o36s07sdPEr3Hc3FLgwMhJK74z3nmmcM+binoFcClwZQ7b+TZwbZLGz/lukPSXJI23YoeYxzls7mqT
        mQt8t2k2hQuAVcHoAPBWbB9vFw8CH07SWDf80pMkjR8GPoztKOZiJXbIeuEULgCMnbvfdaDPOPA/kjTe
        6Ls90t8mpw/fhp0U1HVC0KvCIAp9t+f5ChcAwBuxHSlcfBGyG303RPrfjv0bAa7Hjg9xcRZ2LEKhFCoA
        wiBahvtrv43AnyTphsO+2yPlkKRxip12ruWwmRrwb7s9WwujUAGAHbp5scP3p4DPJmn8pO+GSOncA/yV
        4zYuBUZ9N+RohQmAi4bWgZ3ea6HDZu7BdvgRyVWSxjPADcAWh82MYGcVLozCBEC6MFsB/KzDJqawyzjt
        9t0WKaeBqYFHgK84bubyMIiW+m7LEYUJAOyl/5kO338Y9wc1Ii9o84F7M+DvAJe5/9Z2P4VQpAB4BbDI
        4fs3Jmn8tO9GSNllm4DvOmzgyKQkhVCIAAiDaDE2AHq1l3z6boscU5JumARuxE4U26tXhkFU990WKEgA
        YEdNucz2swH7+k9kPtwFJA7fv4B8hhw7K0oAnAuc7PD972oeP5k3xmzHTvvVqya2Y5B3RQmAi7Fzvfdi
        H3aiD5F5kYyPTWNnje51dN8i3Pq75MZ7AHQn/nB5KroNeMR3O6RyYmCPw/cvCBvrvE/K6z0AsNN8u7z+
        2wTo3b/MtwS35wBnMZN57xZchABYjl3JpVcbkzTu+3Xape+0cbvyXAm8xHcjihAATey70V5MAQ/5boBU
        T7dr8IMOm1hKfpPd9qwIAXAavff/T3G7DBNx8QR2TcBeLMLtyjcXRQiAlQ51PIdbt0wRF9uwb6F6MYhd
        jMSrIgSAS4eIXdirABEfduN2/HnvDOQ1AMJgtIbbAo07sSuyiviQ4vYq8ORw5GKvrwJ9XwEM4jb55+4J
        TtIbAPHlAHYcSq9eYrKBuVrq/rh4DgCzAHB5F7rnufQuv02QCssmsa8DezWcYYZ8tsD3FcAQbjMAjXuu
        XyrMGDON2zG4CLJeu8DnwncALMBtDoD9nuuXCtsyHme4HYOL6H0MTC683n9glybr9RIoow8eAIbDo4MY
        s4TMzG/YGjLIDswcnuxsO7jJ924oM5djcAjPy/P5DgDjsAMy3CZlmFNhEK0AfgE7CWSIyeZ7X2fAztrQ
        gu+HQ9HXMnhsaxoXbm26EnA5BgfxfBXuOwBquCVgr72w5syqkXXGZNlrgOuASxzbl4crgHcZ+MSqILph
        axp3fO+jknE5BgfwHAC+nwGY7qdXM57r//EGZdmV2OmjX47/kx/s/l0D/JGBD622Ky9LflyOwRpux78z
        3wFQKmEQXQD8AQXo4z2LhcC1WT6rLktJKABysiqIasB7gLN913IMAfDB7hJsIgqAvBg7sOMK33Uch3XY
        JapEFAA5Ogc7tLnoFmJDQEQBkKOT8dyp4wQ0fRcgxaAAyE/hXkmWpFaZQwqA/GzHjg7rB4nvAqQYFAD5
        eRQ7RVTRtXFb1EJKRAGQkySNd2KXji56d9vbwGzwXYQUgwIgXzcA3/NdxDE8BXwyScf65VZF5pgCIEdJ
        GreAXwfu9V3LLJ4GPmRq05pBRX5IAZCzJI03ANcAX8Btvri8HAD+CbjGGPOVLe37fdcjBeJ7NGApJWn8
        eDgcvR/D54FXYVeCHWL+ng8Y7CCVp7ELp96dpLFmT5IfowCYI8lE3AHWN86O1o/swJh5HreY1WB6iGz7
        3tj3rpACUwDMsfZjMe3ivxmQitIzAJEKUwCIVJgCQKTCFAAiFaYAEKkwBYBIhSkARCpMASBSYQoAkQpT
        AIhUmAJApMIUACIVpgAQqTAFgEiFKQBEKkwBIFJhCgCRClMAiFSYAkCkwhQAIhWmABCpMAWASIUpAEQq
        TAEgUmEKAJEKUwCIVJiWBptj4fBPGowZyuyCnXKcDKaG3WedZO2SaX7wPd8llZICYI6EQbQUuAy4HAgN
        DPiuqc8MYq9Qd4UP7fsBQXQLWe3xZOK+eV5mtdwUADlbPRyZzPAzwEeBnwbqvmsqgTcBH8DMfCYMos8l
        aTzhu6Cy0DOAnGWGNwB/if3118mfDwOEwMeA3wuDaNh3QWWhAMhRGEQXAX8IrPRdS0kNAe8B3nvGksh3
        LaWgAMhJOBwNAr8KnOW7lpIbAt5Xq7HWdyFloADIi+FM4Od9l1ERIfA630WUgQIgPxcCTd9FVMjLw2BU
        D7EdKQDyczp6qzKfTgWzyHcR/U4BkJ/MdwEiJ0oBkJ+ngSnfRVTI08AB30X0OwVAfh4AWr6LqJD1SRor
        cB0pAPKSsRn4lu8yKiIBbvFdRBkoAHKSTMRTwJ8Cj/mupeQOA58hG3zIdyFloADIUZLGDwAfBp7yXUtJ
        HQb+DPhcMnGP71pKQQGQs5rhZuCtwHeAju96SiIDtgD/FfiIBgPlR++tc/bkeJwB3wuD6E3YAUGXAavR
        cOATdWQ48E5gPXBLlvHY1olYr1tzpACYI0ka7wW+Gg5H/4jJNCHICTKZqWEwGDrJeDztu56yUgDMscT+
        Yk36rkNkNnoGIFJhCgCRClMAiFSYAkCkwhQAIhWmABCpMAWASIUpAEQqTAEgUmEKAJEKUwCIVJgCQKTC
        FAAiFaYAEKkwBYBIhSkARCpMASBSYQoAkQpTAIhUmAJApMIUACIVpgAQqTAFgEiFKQBEKkwBIFJhCgCR
        ClMAiFSY1gacA6uDUZNhVgIvA84DAhS2J2oK2A3cD9yXpPEe3wWVkQIgZ2EQLc3gHdjPmWgfuzoAxGEQ
        fQq4MUnjw74LKhP9KuUoDKIm8Gng48C56OTPwyLglcD1wIfDIKr7LqhMFAA5CYNoIfA/gTcDA77rKaFh
        4L8Bb/ddSJkoAPLzC8BbfBdRcouA3wyD6GzfhZSFAiAHYRCdBLwVe4DK3DoLuNJ3EWWhAMjHacCo7yIq
        5F+vHlmnZwE5UADkYwWw1HcRFXJ6lmVLfBdRBgqAfAyifTmftL9zop2Yjz3Aft9FVMhz2P4B4kgBkI9t
        wOO+i6iQsSSNFbg5UADkIEnjceDrQOa7lgrYA9zku4iyUADk56+Bu3wXUQH/B7jbdxFloQDISZLGO4Br
        gYd911JSGfaX//c1HiA/vgMgw+2y2Xf9PyJJ47uAtwHfBA75rqdE9gJ/Crw3SeOW72Kex+UYdD3+nfke
        rDIDTDt8v3B97pM0HguD6BrgcuAK4BxsD0Hju7Y+M4M98TcA3wDWJ2k86buoWbgcg1PddnrjOwCy7k7o
        hQGGPNc/q+5DwX8Mg3Vfx578C/R48AQZMsgOGcyhLelYkfeeyzE4TcWvAKZxC4CFnus/piQdmwH2+a5D
        5pTLMXgYtytgZ77voSdx69Cx2HP9UmHhSGRwOwYPYs8Bb3wHwOHuTujViOf6pcKyjAHcjsEDVDwAJnG7
        RF720mCd5yZIVRlYADQcNrEf+yPojd8AMExh+3X3avk0me/nGFJdi3AbBfqsMabXZ2C58BoAyXg8A+xy
        2MTJFPxBoJRaAPyEw/d3bxkf8/oa0PctAMBOh++ejP1HEPFhOW7Hn8uxn4siBMB2eu8MsQw4xXcDpLLO
        AHqdmGQGe+x7VZQA6PVVYACEvhsglXUmvfcEPIgCAIAWMN7jdweBtb4bINWzamS0BpzvsIk28IzvdhQh
        AHYDOxy+f1EYRHoTIPPKZKaBXfylVztwewCeC+8BkMEE8ITDJs7HPowRmU+rcbv9fMJkTPhuhPcA2JrG
        08BDDps4A7ckFulFhNsrwIe2TMRexwFAAQKg61+ATo/fXYJdO05kXqwOogHgZ+h9iHcHe8x7V5QAeAS3
        +6FXhUGkeeJlXmRwOnbp917tAh713Q4oTgDswG0qrVHgQt+NkMr4adzu/x8BnvbdCChIACRpfAC3CTWX
        YhfnFJlTYRAtAN6I20Qgd3WPee8KEQBdd+I2N8AbwyA6zXcjpPQuBF7l8H3XH7tcFSkAHgAec/j+WnQV
        IHNozcLIAP8et+7njwP3+27LEYUJgCSNdwG3O2xiAHh7GETqEyBzYmaIc4E3OW7mn5M09j4I6IjCBEDX
        t3G7DbgE938gkR8TDo/WgP+E7QDUqwPAP/luy9GKFgDrcXs/Ogj8ShhEa3w3RErGmJcBb3XcygPAD3w3
        5WiFCoAkjffivu7bBcAHwyAq5JTh0n/CIAqwqz6tcNzUTUka7/HdnqMVKgC6bgK2Om7j7cCVvhsi/S9c
        shbspf/rHDf1FAVc1LRwAZAZHgVudtxMAFwXBpE6B4mb2kmXYX/9Fzhu6WZjirduZOGW1hrvtLJGvbkX
        29nCZc715cCaRr15W7vT8j7qSvpPGERrgc8CZztu6lngI0kab/Pdpucr3BUAQAb3AV/PYVM/B3wiDKJl
        vtsk/SUMolXAp7Cj/lzdmMG9vts0m8JdAQCMd1ozjXpzJ/B6YNhxc+cDKxr15p3tTqsQ3S+l2MIgWg18
        GvsD4moncO3WAv76Q0GvAADIGAO+nFMb3wZ8Jgyi0HezpNi6z43+AveHfkf8lSEr5K8/FHzJ6u77/Bux
        r/bycCdwbVbj7q3tuMgrzso8WxNEAzPwWuAPyG9k6UPAlUkau8x4NacKeQtwRLvT2tuoNw9gL8XyeK9/
        BvBakzHZqDcfaXdaRVxvXuZZGETLMvg17Mnv0tPvaIeAjyZpfKvv9h1LoQMAoFFvPg6sAS7OaZMjwKuB
        8xv15vZGvdlqd1peV2cRP8KRaEGj3rwc+GNs35E8J5X5hwx+b7zT8rr234sp9C3AEWEQnQt8hfxuBY7Y
        BfwtcAMm25iMb/A+R5vMvTAYHQKzDng38Iu4LfA5m4eBNyVp/KDvtr6YvggAgDCIfhH4Am6LMb6QHcA3
        gL8B7kvS2GXFYimgqLaSPUuWjwA/BbwZuIK5mU16HHhXksZf8d3m49FPATAA/BbwO7j3ynoh48AY8E3g
        u8BjNTO178nxB3w3X3qwesk6sloWYGeNvhz7ZH8Utw5mx3IY+BiYjyXpmNdVf49X3wQAQBhEi4E/At41
        x7Vn2GXLN2FHKN6DncTxaTImpiYXT2/vfN/37pCjnMJlLAzGBzFZQMap2AliLgVe3v17g7k/3r8IfCBJ
        477pedpXAQAQBtEpwGeAX5rH/+xhYA+wDUiAzd2/b8cGRQrsAyaBKTJmwExnJjvA4cOdrQc3+t5tTsJg
        tAZmESbzM8IyMwbbn6OGHfJdxz6wG8HOzX8a9g3PS7uf07v//3yuGHUz8J4kjVte9lGP+i4AAMIgOgP4
        c/LpqdWrDJjCvu45iJ3r/VD3zylgGtsL7A7g62Q8mkzEffW2oTvV+mXYHpnnYU88Hwb4/yf/Sd06TgIW
        dv8+iN9j+TbgnUkab/FYQ0/6MgDgR7prXuG7lheRYYc3fxL4QpLGB30XdDy6A2Guw86zuNB3PQV2K/C+
        JI0f911ILwrfD+CFtDutdqPe/B6wCjiH4oaZwd5/XgbUGvXmXe1Oq9CvG7vdYb+I7S+hiVVml2HfHL0/
        SePNvovpVd8GAEC700ob9ebt2AFDFxe8PYPAvwKebHdahX0oEAbRUuwzlp/1XUuBHcYG5K8nabzddzEu
        inzCHJd2p3WgUW9+F/sQbhRY5LumY1gArGzUmze1O639vouZTaPefAvwQUpwbMyRvcDHgeuKNr1XL4o7
        GvAEJGm8H3uP/XYKNOf6C7gYeIXvImazOhhdiH27osv+2T0IvMNk5vf76VXfsZQiAACSNJ5O0vibwFXA
        54FC/sJirwIu8V3EbDLMKdj5E+RHHQS+BFyVpPHXtkyMFfoZzokoTQAckaTxZjLzAeAd2JmFivjqrblq
        JCriQ8uluE/AUiYZdpr6dwO/kqRxIVb0zdN8dpSYN8nE2CHg78IgugMbBP8Rt9Vc8zY9kBXyR2QGe9CL
        ncX3S8DniziXX15KdwVwtCSNn8bwu9g+4J/E/qMW4QDf+mR6fxHqeL5nsT0eqyrDLtv9KWz/h98p88kP
        Jb0COFoyHs8AD4fB6G+BuR64Grt82Fme2r8PuNv3fplNBruMHQzlOgtuv5nGdu/+KnZE6ENJGhfyEi1v
        RbwPnVOrgsgY23f8NdgHhi8Dls3jvvgWcHWSxqnvfTGbMIjeAPw1+U6OUUQZ9pXevdgT/9vGZE9tGd9Q
        xGdGc6ZyAXC0MIgWYvu4v7r7uQh4CXP3DvwZ4JokjW/z3fZj7JOTsJfA7/ZdyxyYwd7mbAK+A9wK5sEk
        HSvqG6M5V+kAOOL0cy9lcMfUIuzUY5dg39Nf1P3fDfK5VdgFXDuD+fK2dKyI9/8/FAZRE/jf2Nly+vk5
        0TTQxo7gvB+7MOd64Mkp6vu2p4W8E5tXCoBZrBqOasYQYMcZnI29SjgXO+R0BTYUFmPf6b/YCXIIe8//
        cTJu7ZcRgWEQLQf+M7Zz1ekU91iZwQ7D3o892Xdih2o/gp2a63Fga0bW3ppW6/L+eBT1H7VwVgXRgDEs
        ImMEO5XUMuztwnLsWoTD2PvmBdiedDXsJf8dYO5I0rG9vtvQU5vtQKvLsFdEvrpZHxl6fRh7su8DJrDz
        MOzGXtY/Z//M2sCBJNX8jsdDAZCjC5aew/7pxWRTNZMNzBhjmEnS2HdZuQiHI4Pxc7xkGZjpWmYGZ7LF
        A/vZtLd0/XFERERERERERERERERERERERERERERERERERERERERERERERERERESkYv4f3hdAsA3cMYIA
        AAAASUVORK5CYII=
</value>
  </data>
</root>